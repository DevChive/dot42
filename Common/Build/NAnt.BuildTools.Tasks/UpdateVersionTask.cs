using System.IO;
using System.Reflection;
using System.Text;
using System.Xml.Linq;
using NAnt.Core;
using NAnt.Core.Attributes;

namespace NAnt.BuildTools.Tasks
{
    [TaskName("update-version")]
    public class UpdateVersionsTask : Task
    {
        [TaskAttribute("dir", Required = true)]
        public string Directory { get; set; }

        [TaskAttribute("destdir", Required = true)]
        public string DestinationDirectory { get; set; }

        protected override void ExecuteTask()
        {
            var productVersionFilename = Path.Combine(Directory, "ProductVersion.xml");
            
            var doc = XDocument.Load(productVersionFilename);
            var version = (string) doc.Root.Element("Version");
            var buildnr = (string) doc.Root.Element("BuildNr");

            StringBuilder b = new StringBuilder();
            var assembly = Assembly.GetExecutingAssembly();
            b.AppendFormat("// This file was auto-generated by '{0}' version '{1}' from '{2}'\n", assembly.GetName().Name, assembly.GetName().Version, Path.GetFileName(productVersionFilename));
            b.AppendLine  ("using System.Reflection;");
            b.AppendLine  ("using System.Runtime.CompilerServices;");
            b.AppendLine();
            b.AppendFormat("[assembly: AssemblyVersion(\"{0}.{1}\")]\n", version, buildnr);
            b.AppendLine  ("[assembly: AssemblyConfiguration(\"\")]");

            File.WriteAllText(Path.Combine(DestinationDirectory, "Version.cs"), b.ToString());
        }
    }
}
